Det här är en kodstandard och samling formateringsregler som har utgått från officiella konventioner användna i K&R, GNU C och GTK+.
Om vi alla följer den så kan vi leverera ett bibliotek som är skriven på ett tydligt och sammanhängande vis.

1) Konstanter ska vara i caps:
#define MAX_HEAP_SIZE 2^24
const double PI = 3.14159265359f;


2) Filnamn, variabelnamn och funktionsnamn ska ha understreck mellan orden:
quad_tree.c
int variable_name;
void function_that_does_something()
{
	
}


3) Klammerparenteser ska ligga på sina egna rader:
int foo()
{
	while (1)
	{
		
	}
}


4) Pekare ska se ut på följande sätt:
int* p;
void read_file(char* buf, int size);


5) Typedefs till struktar och unioner ska separeras med understreck och sluta med 't':
typedef struct
{
	char name[32];
	int age;
} person_t;
typedef union
{
	int i;
	float f;
} decimal_t;


6) Include guards ska se ut på följande vis:
#ifndef FILE_NAME_H
#define FILE_NAME_H

struct foo 
{
    char c;
};

void bar(void);

#endif /* FILE_NAME_H */